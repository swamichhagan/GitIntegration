name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      test_env:
        description: "Test Environment"
        required: true
        default: "QA"
        type: choice
        options:
          - DEV
          - QA
          - UAT
          - PERF

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
          - 4444:4444

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Wait for Selenium Grid
        run: sleep 10

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Install Chrome & ChromeDriver
        run: |
          sudo apt-get update 
          sudo apt-get install -y chromium-chromedriver
          sudo apt-get install -y google-chrome-stable
          google-chrome --version
          chromedriver --version

      - name: Debug Chrome & ChromeDriver
        run: |
          google-chrome --version
          chromedriver --version
          which chromedriver

      - name: Inject Secrets into Environment
        env:
          SELENIUM_USERNAME: ${{ secrets.USER_ID }}
          SELENIUM_PASSWORD: ${{ secrets.PWD }}
        run: |          
          echo "SELENIUM_USERNAME=$SELENIUM_USERNAME" >> $GITHUB_ENV
          echo "SELENIUM_PASSWORD=$SELENIUM_PASSWORD" >> $GITHUB_ENV
          
      - name: Set Test Environment Variable
        run: echo "TEST_ENV=${{ github.event.inputs.test_env }}" >> $GITHUB_ENV

      - name: Build with Maven
        run: |
          cd GitIntegration && mvn test -B package --file pom.xml

      - name: Find Latest Extent Report
        id: find_report
        run: echo "LATEST_REPORT=$(ls -t GitIntegration/test-output/ExtentReport_*.html | head -n 1)" >> $GITHUB_ENV

      - name: Upload Latest Extent Report
        uses: actions/upload-artifact@v4
        with:
          name: Extent_Report
          path: ${{ env.LATEST_REPORT }}
